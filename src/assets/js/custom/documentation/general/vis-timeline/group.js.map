{"version":3,"file":"js/custom/documentation/general/vis-timeline/group.js","mappings":"mBAGA,IAAIA,EAsFO,CAEHC,KAAM,YAtFS,WAqBf,IApBA,IAAIC,EAAMC,KAAKD,MAEXE,EAAU,CACVC,OAAO,EACPC,UAAW,IACXC,kBAAkB,EAClBC,gBAAgB,EAChBC,QAAS,UACTC,MAAOP,KAAKD,MAAQ,OACpBS,IAAKR,KAAKD,MAAQ,QAClBU,YAAa,CACTC,KAAM,OACNC,KAAM,QAGVC,EAAS,IAAIC,IAAIC,QACjBC,EAAQ,IAAIF,IAAIC,QAIXE,EAAI,EAAGA,EAFJ,IAEeA,IAAK,CAC5B,IAAIT,EAAQR,EAAM,OAAuBiB,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,WACzDX,EAAMD,EAAQ,OAAuB,EAAIU,KAAKC,MAAsB,EAAhBD,KAAKE,WAE7DP,EAAOQ,IAAI,CACPC,GAAIL,EACJM,QAAS,QAAUN,EACnBO,MAAOP,IAGXD,EAAMK,IAAI,CACNC,GAAIL,EACJQ,MAAOR,EACPT,MAAOA,EACPC,IAAKA,EACLiB,KAAM,QACNH,QAAS,QAAUN,IAK3B,IAAIU,EAAYC,SAASC,eAAe,6BACpCC,EAAW,IAAIhB,IAAIiB,SAASJ,EAAWX,EAAOH,EAAQX,GAE1D4B,EAASE,UAAUnB,GACnBiB,EAASG,SAASjB,GAuBlBc,EAASI,GAAG,SArBZ,SAAkBC,EAAMC,EAAO,KAC3B,IAAIC,EACJ,OAAO,YAAaC,GAChBC,aAAaF,GACbA,EAAUG,YAAW,KACjBL,EAAKM,MAAMC,KAAMJ,KAClBF,IAeWO,EAXJC,IACd,IACIC,EADUf,EAASgB,mBACFC,QAAO,CAACC,EAAKC,KAC9B,IAAIxB,EAAQK,EAASoB,QAAQrC,OAAOoC,GAIpC,OAHIxB,EAAMT,QACNgC,EAAMA,EAAIG,OAAOC,OAAOC,KAAK5B,EAAMT,SAEhCgC,IACR,IACHlB,EAASwB,MAAMT,KAEwB,MAK5BjB,SAASC,eAAe,oCAChC0B,iBAAiB,SAASX,IAC7BA,EAAEY,iBAEF,IAAIC,EAAI3B,EAASgB,mBACjBlB,SAASC,eAAe,0BAA0B6B,UAAY,GAC9D9B,SAASC,eAAe,0BAA0B6B,WAAaD,KAO/DE,KAMZC,OAAOC,oBAAmB,WACtB/D,EAAmBC,W","sources":["webpack://metronic/../demo1/src/js/custom/documentation/general/vis-timeline/group.js"],"sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTVisTimelineGroup = function () {\r\n    // Private functions\r\n    var exampleGroup = function () {\r\n        var now = Date.now();\r\n\r\n        var options = {\r\n            stack: true,\r\n            maxHeight: 640,\r\n            horizontalScroll: false,\r\n            verticalScroll: true,\r\n            zoomKey: \"ctrlKey\",\r\n            start: Date.now() - 1000 * 60 * 60 * 24 * 3, // minus 3 days\r\n            end: Date.now() + 1000 * 60 * 60 * 24 * 21, // plus 1 months aprox.\r\n            orientation: {\r\n                axis: \"both\",\r\n                item: \"top\",\r\n            },\r\n        };\r\n        var groups = new vis.DataSet();\r\n        var items = new vis.DataSet();\r\n\r\n        var count = 300;\r\n\r\n        for (var i = 0; i < count; i++) {\r\n            var start = now + 1000 * 60 * 60 * 24 * (i + Math.floor(Math.random() * 7));\r\n            var end = start + 1000 * 60 * 60 * 24 * (1 + Math.floor(Math.random() * 5));\r\n\r\n            groups.add({\r\n                id: i,\r\n                content: \"Task \" + i,\r\n                order: i,\r\n            });\r\n\r\n            items.add({\r\n                id: i,\r\n                group: i,\r\n                start: start,\r\n                end: end,\r\n                type: \"range\",\r\n                content: \"Item \" + i,\r\n            });\r\n        }\r\n\r\n        // create a Timeline\r\n        var container = document.getElementById(\"kt_docs_vistimeline_group\");\r\n        var timeline = new vis.Timeline(container, items, groups, options);\r\n        //timeline = new vis.Timeline(container, null, options);\r\n        timeline.setGroups(groups);\r\n        timeline.setItems(items);\r\n\r\n        function debounce(func, wait = 100) {\r\n            let timeout;\r\n            return function (...args) {\r\n                clearTimeout(timeout);\r\n                timeout = setTimeout(() => {\r\n                    func.apply(this, args);\r\n                }, wait);\r\n            };\r\n        }\r\n\r\n        let groupFocus = (e) => {\r\n            let vGroups = timeline.getVisibleGroups();\r\n            let vItems = vGroups.reduce((res, groupId) => {\r\n                let group = timeline.itemSet.groups[groupId];\r\n                if (group.items) {\r\n                    res = res.concat(Object.keys(group.items));\r\n                }\r\n                return res;\r\n            }, []);\r\n            timeline.focus(vItems);\r\n        };\r\n        timeline.on(\"scroll\", debounce(groupFocus, 200));\r\n        // Enabling the next line leads to a continuous since calling focus might scroll vertically even if it shouldn't\r\n        // this.timeline.on(\"scrollSide\", debounce(groupFocus, 200))        \r\n\r\n        // Handle button click\r\n        const button = document.getElementById('kt_docs_vistimeline_group_button');\r\n        button.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            var a = timeline.getVisibleGroups();\r\n            document.getElementById(\"visibleGroupsContainer\").innerHTML = \"\";\r\n            document.getElementById(\"visibleGroupsContainer\").innerHTML += a;\r\n        });\r\n    }\r\n\r\n    return {\r\n        // Public Functions\r\n        init: function () {\r\n            exampleGroup();\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTVisTimelineGroup.init();\r\n});\r\n"],"names":["KTVisTimelineGroup","init","now","Date","options","stack","maxHeight","horizontalScroll","verticalScroll","zoomKey","start","end","orientation","axis","item","groups","vis","DataSet","items","i","Math","floor","random","add","id","content","order","group","type","container","document","getElementById","timeline","Timeline","setGroups","setItems","on","func","wait","timeout","args","clearTimeout","setTimeout","apply","this","debounce","e","vItems","getVisibleGroups","reduce","res","groupId","itemSet","concat","Object","keys","focus","addEventListener","preventDefault","a","innerHTML","exampleGroup","KTUtil","onDOMContentLoaded"],"sourceRoot":""}